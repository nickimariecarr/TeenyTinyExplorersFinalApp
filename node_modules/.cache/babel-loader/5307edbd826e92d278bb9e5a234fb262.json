{"ast":null,"code":"\"use strict\";\n\nvar n = Object.defineProperty;\n\nvar s = (r, t) => n(r, \"name\", {\n  value: t,\n  configurable: !0\n});\n\nconst a = require(\"lodash\"),\n      o = require(\"../abstract\"),\n      u = require(\"./connection-manager\"),\n      p = require(\"./query\"),\n      c = require(\"./query-generator\"),\n      i = require(\"../../data-types\").mssql,\n      {\n  MSSqlQueryInterface: l\n} = require(\"./query-interface\");\n\nclass e extends o {\n  constructor(t) {\n    super();\n    this.sequelize = t, this.connectionManager = new u(this, t), this.queryGenerator = new c({\n      _dialect: this,\n      sequelize: t\n    }), this.queryInterface = new l(t, this.queryGenerator);\n  }\n\n}\n\ns(e, \"MssqlDialect\"), e.prototype.supports = a.merge(a.cloneDeep(o.prototype.supports), {\n  DEFAULT: !0,\n  \"DEFAULT VALUES\": !0,\n  \"LIMIT ON UPDATE\": !0,\n  \"ORDER NULLS\": !1,\n  lock: !1,\n  transactions: !0,\n  migrations: !1,\n  returnValues: {\n    output: !0\n  },\n  schemas: !0,\n  autoIncrement: {\n    identityInsert: !0,\n    defaultValue: !1,\n    update: !1\n  },\n  constraints: {\n    restrict: !1,\n    default: !0\n  },\n  index: {\n    collate: !1,\n    length: !1,\n    parser: !1,\n    type: !0,\n    using: !1,\n    where: !0\n  },\n  NUMERIC: !0,\n  tmpTableTrigger: !0\n}), e.prototype.defaultVersion = \"12.0.2000\", e.prototype.Query = p, e.prototype.name = \"mssql\", e.prototype.TICK_CHAR = '\"', e.prototype.TICK_CHAR_LEFT = \"[\", e.prototype.TICK_CHAR_RIGHT = \"]\", e.prototype.DataTypes = i, module.exports = e;","map":{"version":3,"sources":["../../../../lib/dialects/mssql/index.js"],"names":[],"mappings":";;;;;;;;;AAEA,MAAM,CAAA,GAAI,OAAA,CAAQ,QAAR,CAAV;AAAA,MACM,CAAA,GAAkB,OAAA,CAAQ,aAAR,CADxB;AAAA,MAEM,CAAA,GAAoB,OAAA,CAAQ,sBAAR,CAF1B;AAAA,MAGM,CAAA,GAAQ,OAAA,CAAQ,SAAR,CAHd;AAAA,MAIM,CAAA,GAAiB,OAAA,CAAQ,mBAAR,CAJvB;AAAA,MAKM,CAAA,GAAY,OAAA,CAAQ,kBAAR,CAAA,CAA4B,KAL9C;AAAA,MAMM;AAAE,EAAA,mBAAA,EAAA;AAAF,IAA0B,OAAA,CAAQ,mBAAR,CANhC;;AAQA,MAAA,CAAA,SAA2B,CAA3B,CAA2C;AACzC,EAAA,WAAA,CAAY,CAAZ,EAAuB;AACrB;AACA,SAAK,SAAL,GAAiB,CAAjB,EACA,KAAK,iBAAL,GAAyB,IAAI,CAAJ,CAAsB,IAAtB,EAA4B,CAA5B,CADzB,EAEA,KAAK,cAAL,GAAsB,IAAI,CAAJ,CAAmB;AACvC,MAAA,QAAA,EAAU,IAD6B;AAEvC,MAAA,SAAA,EAAA;AAFuC,KAAnB,CAFtB,EAMA,KAAK,cAAL,GAAsB,IAAI,CAAJ,CACpB,CADoB,EAEpB,KAAK,cAFe,CANtB;AAQO;;AAXgC;;AAA3C,CAAA,CAAA,CAAA,EAAA,cAAA,CAAA,EAgBA,CAAA,CAAa,SAAb,CAAuB,QAAvB,GAAkC,CAAA,CAAE,KAAF,CAChC,CAAA,CAAE,SAAF,CAAY,CAAA,CAAgB,SAAhB,CAA0B,QAAtC,CADgC,EAEhC;AACE,EAAA,OAAA,EAAS,CAAA,CADX;AAEE,oBAAkB,CAAA,CAFpB;AAGE,qBAAmB,CAAA,CAHrB;AAIE,iBAAe,CAAA,CAJjB;AAKE,EAAA,IAAA,EAAM,CAAA,CALR;AAME,EAAA,YAAA,EAAc,CAAA,CANhB;AAOE,EAAA,UAAA,EAAY,CAAA,CAPd;AAQE,EAAA,YAAA,EAAc;AACZ,IAAA,MAAA,EAAQ,CAAA;AADI,GARhB;AAWE,EAAA,OAAA,EAAS,CAAA,CAXX;AAYE,EAAA,aAAA,EAAe;AACb,IAAA,cAAA,EAAgB,CAAA,CADH;AAEb,IAAA,YAAA,EAAc,CAAA,CAFD;AAGb,IAAA,MAAA,EAAQ,CAAA;AAHK,GAZjB;AAiBE,EAAA,WAAA,EAAa;AACX,IAAA,QAAA,EAAU,CAAA,CADC;AAEX,IAAA,OAAA,EAAS,CAAA;AAFE,GAjBf;AAqBE,EAAA,KAAA,EAAO;AACL,IAAA,OAAA,EAAS,CAAA,CADJ;AAEL,IAAA,MAAA,EAAQ,CAAA,CAFH;AAGL,IAAA,MAAA,EAAQ,CAAA,CAHH;AAIL,IAAA,IAAA,EAAM,CAAA,CAJD;AAKL,IAAA,KAAA,EAAO,CAAA,CALF;AAML,IAAA,KAAA,EAAO,CAAA;AANF,GArBT;AA6BE,EAAA,OAAA,EAAS,CAAA,CA7BX;AA8BE,EAAA,eAAA,EAAiB,CAAA;AA9BnB,CAFgC,CAhBlC,EAoDA,CAAA,CAAa,SAAb,CAAuB,cAAvB,GAAwC,WApDxC,EAqDA,CAAA,CAAa,SAAb,CAAuB,KAAvB,GAA+B,CArD/B,EAsDA,CAAA,CAAa,SAAb,CAAuB,IAAvB,GAA8B,OAtD9B,EAuDA,CAAA,CAAa,SAAb,CAAuB,SAAvB,GAAmC,GAvDnC,EAwDA,CAAA,CAAa,SAAb,CAAuB,cAAvB,GAAwC,GAxDxC,EAyDA,CAAA,CAAa,SAAb,CAAuB,eAAvB,GAAyC,GAzDzC,EA0DA,CAAA,CAAa,SAAb,CAAuB,SAAvB,GAAmC,CA1DnC,EA4DA,MAAA,CAAO,OAAP,GAAiB,CA5DjB","sourcesContent":["'use strict';\n\nconst _ = require('lodash');\nconst AbstractDialect = require('../abstract');\nconst ConnectionManager = require('./connection-manager');\nconst Query = require('./query');\nconst QueryGenerator = require('./query-generator');\nconst DataTypes = require('../../data-types').mssql;\nconst { MSSqlQueryInterface } = require('./query-interface');\n\nclass MssqlDialect extends AbstractDialect {\n  constructor(sequelize) {\n    super();\n    this.sequelize = sequelize;\n    this.connectionManager = new ConnectionManager(this, sequelize);\n    this.queryGenerator = new QueryGenerator({\n      _dialect: this,\n      sequelize\n    });\n    this.queryInterface = new MSSqlQueryInterface(\n      sequelize,\n      this.queryGenerator\n    );\n  }\n}\n\nMssqlDialect.prototype.supports = _.merge(\n  _.cloneDeep(AbstractDialect.prototype.supports),\n  {\n    DEFAULT: true,\n    'DEFAULT VALUES': true,\n    'LIMIT ON UPDATE': true,\n    'ORDER NULLS': false,\n    lock: false,\n    transactions: true,\n    migrations: false,\n    returnValues: {\n      output: true\n    },\n    schemas: true,\n    autoIncrement: {\n      identityInsert: true,\n      defaultValue: false,\n      update: false\n    },\n    constraints: {\n      restrict: false,\n      default: true\n    },\n    index: {\n      collate: false,\n      length: false,\n      parser: false,\n      type: true,\n      using: false,\n      where: true\n    },\n    NUMERIC: true,\n    tmpTableTrigger: true\n  }\n);\n\nMssqlDialect.prototype.defaultVersion = '12.0.2000'; // SQL Server 2014 Express, minimum supported version\nMssqlDialect.prototype.Query = Query;\nMssqlDialect.prototype.name = 'mssql';\nMssqlDialect.prototype.TICK_CHAR = '\"';\nMssqlDialect.prototype.TICK_CHAR_LEFT = '[';\nMssqlDialect.prototype.TICK_CHAR_RIGHT = ']';\nMssqlDialect.prototype.DataTypes = DataTypes;\n\nmodule.exports = MssqlDialect;\n"]},"metadata":{},"sourceType":"script"}