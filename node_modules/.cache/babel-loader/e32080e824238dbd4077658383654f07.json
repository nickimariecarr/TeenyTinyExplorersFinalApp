{"ast":null,"code":"\"use strict\";\n\nvar o = Object.defineProperty;\n\nvar s = (e, r) => o(e, \"name\", {\n  value: r,\n  configurable: !0\n});\n\nconst c = require(\"./base-error\");\n\nclass t extends c {\n  constructor(r) {\n    super(r);\n    this.name = \"SequelizeInstanceError\";\n  }\n\n}\n\ns(t, \"InstanceError\"), module.exports = t;","map":{"version":3,"sources":["../../../lib/errors/instance-error.js"],"names":[],"mappings":";;;;;;;;;AAEA,MAAM,CAAA,GAAY,OAAA,CAAQ,cAAR,CAAlB;;AAKA,MAAA,CAAA,SAA4B,CAA5B,CAAsC;AACpC,EAAA,WAAA,CAAY,CAAZ,EAAqB;AACnB,UAAM,CAAN;AACA,SAAK,IAAL,GAAY,wBAAZ;AAAY;;AAHsB;;AAAtC,CAAA,CAAA,CAAA,EAAA,eAAA,CAAA,EAOA,MAAA,CAAO,OAAP,GAAiB,CAPjB","sourcesContent":["'use strict';\n\nconst BaseError = require('./base-error');\n\n/**\n * Thrown when a some problem occurred with Instance methods (see message for details)\n */\nclass InstanceError extends BaseError {\n  constructor(message) {\n    super(message);\n    this.name = 'SequelizeInstanceError';\n  }\n}\n\nmodule.exports = InstanceError;\n"]},"metadata":{},"sourceType":"script"}