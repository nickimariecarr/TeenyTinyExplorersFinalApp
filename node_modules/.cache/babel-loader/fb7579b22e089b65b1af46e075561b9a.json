{"ast":null,"code":"\"use strict\";\n\nvar i = Object.defineProperty;\n\nvar r = (e, s) => i(e, \"name\", {\n  value: s,\n  configurable: !0\n});\n\nconst t = require(\"./base-error\");\n\nclass o extends t {\n  constructor(s) {\n    super(s ? s.message : \"\");\n    this.name = \"SequelizeConnectionError\", this.parent = s, this.original = s;\n  }\n\n}\n\nr(o, \"ConnectionError\"), module.exports = o;","map":{"version":3,"sources":["../../../lib/errors/connection-error.js"],"names":[],"mappings":";;;;;;;;;AAEA,MAAM,CAAA,GAAY,OAAA,CAAQ,cAAR,CAAlB;;AAKA,MAAA,CAAA,SAA8B,CAA9B,CAAwC;AACtC,EAAA,WAAA,CAAY,CAAZ,EAAoB;AAClB,UAAM,CAAA,GAAS,CAAA,CAAO,OAAhB,GAA0B,EAAhC;AACA,SAAK,IAAL,GAAY,0BAAZ,EAMA,KAAK,MAAL,GAAc,CANd,EAOA,KAAK,QAAL,GAAgB,CAPhB;AAOgB;;AAVoB;;AAAxC,CAAA,CAAA,CAAA,EAAA,iBAAA,CAAA,EAcA,MAAA,CAAO,OAAP,GAAiB,CAdjB","sourcesContent":["'use strict';\n\nconst BaseError = require('./base-error');\n\n/**\n * A base class for all connection related errors.\n */\nclass ConnectionError extends BaseError {\n  constructor(parent) {\n    super(parent ? parent.message : '');\n    this.name = 'SequelizeConnectionError';\n    /**\n     * The connection specific error which triggered this one\n     *\n     * @type {Error}\n     */\n    this.parent = parent;\n    this.original = parent;\n  }\n}\n\nmodule.exports = ConnectionError;\n"]},"metadata":{},"sourceType":"script"}