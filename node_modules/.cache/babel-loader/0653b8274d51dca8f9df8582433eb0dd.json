{"ast":null,"code":"\"use strict\";\n\nvar i = Object.defineProperty;\n\nvar t = (r, s) => i(r, \"name\", {\n  value: s,\n  configurable: !0\n});\n\nconst c = require(\"./base-error\");\n\nclass a extends c {\n  constructor(s, e) {\n    super(s.message);\n    this.name = \"SequelizeDatabaseError\", this.parent = s, this.original = s, this.sql = s.sql, this.parameters = s.parameters, e && e.stack && (this.stack = e.stack);\n  }\n\n}\n\nt(a, \"DatabaseError\"), module.exports = a;","map":{"version":3,"sources":["../../../lib/errors/database-error.js"],"names":[],"mappings":";;;;;;;;;AAEA,MAAM,CAAA,GAAY,OAAA,CAAQ,cAAR,CAAlB;;AAKA,MAAA,CAAA,SAA4B,CAA5B,CAAsC;AACpC,EAAA,WAAA,CAAY,CAAZ,EAAoB,CAApB,EAA6B;AAC3B,UAAM,CAAA,CAAO,OAAb;AACA,SAAK,IAAL,GAAY,wBAAZ,EAIA,KAAK,MAAL,GAAc,CAJd,EAQA,KAAK,QAAL,GAAgB,CARhB,EAcA,KAAK,GAAL,GAAW,CAAA,CAAO,GAdlB,EAoBA,KAAK,UAAL,GAAkB,CAAA,CAAO,UApBzB,EA0BI,CAAA,IAAW,CAAA,CAAQ,KAAnB,KACF,KAAK,KAAL,GAAa,CAAA,CAAQ,KADnB,CA1BJ;AA2BuB;;AA9BW;;AAAtC,CAAA,CAAA,CAAA,EAAA,eAAA,CAAA,EAmCA,MAAA,CAAO,OAAP,GAAiB,CAnCjB","sourcesContent":["'use strict';\n\nconst BaseError = require('./base-error');\n\n/**\n * A base class for all database related errors.\n */\nclass DatabaseError extends BaseError {\n  constructor(parent, options) {\n    super(parent.message);\n    this.name = 'SequelizeDatabaseError';\n    /**\n     * @type {Error}\n     */\n    this.parent = parent;\n    /**\n     * @type {Error}\n     */\n    this.original = parent;\n    /**\n     * The SQL that triggered the error\n     *\n     * @type {string}\n     */\n    this.sql = parent.sql;\n    /**\n     * The parameters for the sql that triggered the error\n     *\n     * @type {Array<any>}\n     */\n    this.parameters = parent.parameters;\n    /**\n     * The stacktrace can be overridden if the original stacktrace isn't very good\n     *\n     * @type {string}\n     */\n    if (options && options.stack) {\n      this.stack = options.stack;\n    }\n  }\n}\n\nmodule.exports = DatabaseError;\n"]},"metadata":{},"sourceType":"script"}