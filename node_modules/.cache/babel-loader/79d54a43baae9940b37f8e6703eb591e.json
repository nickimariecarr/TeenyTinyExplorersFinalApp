{"ast":null,"code":"\"use strict\";\n\nvar l = Object.defineProperty;\n\nvar a = (e, r) => l(e, \"name\", {\n  value: r,\n  configurable: !0\n});\n\nconst t = require(\"./../validation-error\");\n\nclass s extends t {\n  constructor(r) {\n    r = r || {}, r.parent = r.parent || {\n      sql: \"\"\n    }, r.message = r.message || r.parent.message || \"Validation Error\", r.errors = r.errors || {};\n    super(r.message, r.errors, {\n      stack: r.stack\n    });\n    this.name = \"SequelizeUniqueConstraintError\", this.errors = r.errors, this.fields = r.fields, this.parent = r.parent, this.original = r.parent, this.sql = r.parent.sql;\n  }\n\n}\n\na(s, \"UniqueConstraintError\"), module.exports = s;","map":{"version":3,"sources":["../../../../lib/errors/validation/unique-constraint-error.js"],"names":[],"mappings":";;;;;;;;;AAEA,MAAM,CAAA,GAAkB,OAAA,CAAQ,uBAAR,CAAxB;;AAKA,MAAA,CAAA,SAAoC,CAApC,CAAoD;AAClD,EAAA,WAAA,CAAY,CAAZ,EAAqB;AACnB,IAAA,CAAA,GAAU,CAAA,IAAW,EAArB,EACA,CAAA,CAAQ,MAAR,GAAiB,CAAA,CAAQ,MAAR,IAAkB;AAAE,MAAA,GAAA,EAAK;AAAP,KADnC,EAEA,CAAA,CAAQ,OAAR,GAAkB,CAAA,CAAQ,OAAR,IAAmB,CAAA,CAAQ,MAAR,CAAe,OAAlC,IAA6C,kBAF/D,EAGA,CAAA,CAAQ,MAAR,GAAiB,CAAA,CAAQ,MAAR,IAAkB,EAHnC;AAIA,UAAM,CAAA,CAAQ,OAAd,EAAuB,CAAA,CAAQ,MAA/B,EAAuC;AAAE,MAAA,KAAA,EAAO,CAAA,CAAQ;AAAjB,KAAvC;AAEA,SAAK,IAAL,GAAY,gCAAZ,EACA,KAAK,MAAL,GAAc,CAAA,CAAQ,MADtB,EAEA,KAAK,MAAL,GAAc,CAAA,CAAQ,MAFtB,EAGA,KAAK,MAAL,GAAc,CAAA,CAAQ,MAHtB,EAIA,KAAK,QAAL,GAAgB,CAAA,CAAQ,MAJxB,EAKA,KAAK,GAAL,GAAW,CAAA,CAAQ,MAAR,CAAe,GAL1B;AAK0B;;AAbsB;;AAApD,CAAA,CAAA,CAAA,EAAA,uBAAA,CAAA,EAiBA,MAAA,CAAO,OAAP,GAAiB,CAjBjB","sourcesContent":["'use strict';\n\nconst ValidationError = require('./../validation-error');\n\n/**\n * Thrown when a unique constraint is violated in the database\n */\nclass UniqueConstraintError extends ValidationError {\n  constructor(options) {\n    options = options || {};\n    options.parent = options.parent || { sql: '' };\n    options.message = options.message || options.parent.message || 'Validation Error';\n    options.errors = options.errors || {};\n    super(options.message, options.errors, { stack: options.stack });\n\n    this.name = 'SequelizeUniqueConstraintError';\n    this.errors = options.errors;\n    this.fields = options.fields;\n    this.parent = options.parent;\n    this.original = options.parent;\n    this.sql = options.parent.sql;\n  }\n}\n\nmodule.exports = UniqueConstraintError;\n"]},"metadata":{},"sourceType":"script"}