{"ast":null,"code":"\"use strict\";\n\nvar a = Object.defineProperty;\n\nvar t = (n, r) => a(n, \"name\", {\n  value: r,\n  configurable: !0\n});\n\nconst g = require(\"./base-error\");\n\nclass s extends g {\n  constructor(r) {\n    super();\n    this.errors = r, this.name = \"AggregateError\";\n  }\n\n  toString() {\n    return `AggregateError of:\n${this.errors.map(e => e === this ? \"[Circular AggregateError]\" : e instanceof s ? String(e).replace(/\\n$/, \"\").replace(/^/mg, \"  \") : String(e).replace(/^/mg, \"    \").substring(2)).join(`\n`)}\n`;\n  }\n\n}\n\nt(s, \"AggregateError\"), module.exports = s;","map":{"version":3,"sources":["../../../lib/errors/aggregate-error.js"],"names":[],"mappings":";;;;;;;;;AAEA,MAAM,CAAA,GAAY,OAAA,CAAQ,cAAR,CAAlB;;AASA,MAAA,CAAA,SAA6B,CAA7B,CAAuC;AACrC,EAAA,WAAA,CAAY,CAAZ,EAAoB;AAClB;AACA,SAAK,MAAL,GAAc,CAAd,EACA,KAAK,IAAL,GAAY,gBADZ;AAIF;;AAAA,EAAA,QAAA,GAAW;AACO,WAAA;AAAA,EACd,KAAK,MAAL,CAAY,GAAZ,CAAgB,CAAA,IACd,CAAA,KAAU,IAAV,GACI,2BADJ,GAEI,CAAA,YAAiB,CAAjB,GACE,MAAA,CAAO,CAAP,CAAA,CAAc,OAAd,CAAsB,KAAtB,EAA6B,EAA7B,EAAiC,OAAjC,CAAyC,KAAzC,EAAgD,IAAhD,CADF,GAEE,MAAA,CAAO,CAAP,CAAA,CAAc,OAAd,CAAsB,KAAtB,EAA6B,MAA7B,EAAqC,SAArC,CAA+C,CAA/C,CALR,EAOE,IAPF,CAOO;AAAA,CAPP,CAOO;AAAA,CARO;AAQP;;AAhB0B;;AAAvC,CAAA,CAAA,CAAA,EAAA,gBAAA,CAAA,EAsBA,MAAA,CAAO,OAAP,GAAiB,CAtBjB","sourcesContent":["'use strict';\n\nconst BaseError = require('./base-error');\n\n/**\n * A wrapper for multiple Errors\n *\n * @param {Error[]} [errors] Array of errors\n *\n * @property errors {Error[]}\n */\nclass AggregateError extends BaseError {\n  constructor(errors) {\n    super();\n    this.errors = errors;\n    this.name = 'AggregateError';\n  }\n\n  toString() {\n    const message = `AggregateError of:\\n${\n      this.errors.map(error =>\n        error === this\n          ? '[Circular AggregateError]'\n          : error instanceof AggregateError\n            ? String(error).replace(/\\n$/, '').replace(/^/mg, '  ')\n            : String(error).replace(/^/mg, '    ').substring(2)\n        \n      ).join('\\n')\n    }\\n`;\n    return message;\n  }\n}\n\nmodule.exports = AggregateError;\n"]},"metadata":{},"sourceType":"script"}