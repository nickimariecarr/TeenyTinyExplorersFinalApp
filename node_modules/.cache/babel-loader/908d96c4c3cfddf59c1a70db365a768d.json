{"ast":null,"code":"\"use strict\";\n\nvar o = Object.defineProperty;\n\nvar s = (e, r) => o(e, \"name\", {\n  value: r,\n  configurable: !0\n});\n\nconst u = require(\"./base-error\");\n\nclass t extends u {\n  constructor(r) {\n    super(r);\n    this.name = \"SequelizeQueryError\";\n  }\n\n}\n\ns(t, \"QueryError\"), module.exports = t;","map":{"version":3,"sources":["../../../lib/errors/query-error.js"],"names":[],"mappings":";;;;;;;;;AAEA,MAAM,CAAA,GAAY,OAAA,CAAQ,cAAR,CAAlB;;AAKA,MAAA,CAAA,SAAyB,CAAzB,CAAmC;AACjC,EAAA,WAAA,CAAY,CAAZ,EAAqB;AACnB,UAAM,CAAN;AACA,SAAK,IAAL,GAAY,qBAAZ;AAAY;;AAHmB;;AAAnC,CAAA,CAAA,CAAA,EAAA,YAAA,CAAA,EAOA,MAAA,CAAO,OAAP,GAAiB,CAPjB","sourcesContent":["'use strict';\n\nconst BaseError = require('./base-error');\n\n/**\n * Thrown when a query is passed invalid options (see message for details)\n */\nclass QueryError extends BaseError {\n  constructor(message) {\n    super(message);\n    this.name = 'SequelizeQueryError';\n  }\n}\n\nmodule.exports = QueryError;\n"]},"metadata":{},"sourceType":"script"}