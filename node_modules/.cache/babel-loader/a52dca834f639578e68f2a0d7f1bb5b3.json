{"ast":null,"code":"\"use strict\";\n\nconst t = require(\"uuid\").v4,\n      n = {\n  setIsolationLevelQuery(e, r) {\n    if (!r.parent) return `SET TRANSACTION ISOLATION LEVEL ${e};`;\n  },\n\n  generateTransactionId() {\n    return t();\n  },\n\n  startTransactionQuery(e) {\n    return e.parent ? `SAVEPOINT ${this.quoteIdentifier(e.name, !0)};` : \"START TRANSACTION;\";\n  },\n\n  deferConstraintsQuery() {},\n\n  setConstraintQuery() {},\n\n  setDeferredQuery() {},\n\n  setImmediateQuery() {},\n\n  commitTransactionQuery(e) {\n    if (!e.parent) return \"COMMIT;\";\n  },\n\n  rollbackTransactionQuery(e) {\n    return e.parent ? `ROLLBACK TO SAVEPOINT ${this.quoteIdentifier(e.name, !0)};` : \"ROLLBACK;\";\n  }\n\n};\n\nmodule.exports = n;","map":{"version":3,"sources":["../../../../../lib/dialects/abstract/query-generator/transaction.js"],"names":[],"mappings":";;AAEA,MAAM,CAAA,GAAS,OAAA,CAAQ,MAAR,CAAA,CAAgB,EAA/B;AAAA,MAEM,CAAA,GAAqB;AASzB,EAAA,sBAAA,CAAuB,CAAvB,EAA8B,CAA9B,EAAuC;AACrC,QAAI,CAAA,CAAA,CAAQ,MAAZ,EAIA,OAAO,mCAAmC,CAAA,GAA1C;AAA0C,GAdnB;;AAiBzB,EAAA,qBAAA,GAAwB;AACtB,WAAO,CAAA,EAAP;AAAO,GAlBgB;;AA4BzB,EAAA,qBAAA,CAAsB,CAAtB,EAAmC;AACjC,WAAI,CAAA,CAAY,MAAZ,GAEK,aAAa,KAAK,eAAL,CAAqB,CAAA,CAAY,IAAjC,EAAuC,CAAA,CAAvC,CAAuC,GAFzD,GAKG,oBALP;AAKO,GAlCgB;;AAqCzB,EAAA,qBAAA,GAAwB,CAAA,CArCC;;AAuCzB,EAAA,kBAAA,GAAqB,CAAA,CAvCI;;AAwCzB,EAAA,gBAAA,GAAmB,CAAA,CAxCM;;AAyCzB,EAAA,iBAAA,GAAoB,CAAA,CAzCK;;AAkDzB,EAAA,sBAAA,CAAuB,CAAvB,EAAoC;AAClC,QAAI,CAAA,CAAA,CAAY,MAAhB,EAIA,OAAO,SAAP;AAAO,GAvDgB;;AAiEzB,EAAA,wBAAA,CAAyB,CAAzB,EAAsC;AACpC,WAAI,CAAA,CAAY,MAAZ,GAEK,yBAAyB,KAAK,eAAL,CAAqB,CAAA,CAAY,IAAjC,EAAuC,CAAA,CAAvC,CAAuC,GAFrE,GAKG,WALP;AAKO;;AAvEgB,CAF3B;;AA6EA,MAAA,CAAO,OAAP,GAAiB,CAAjB","sourcesContent":["'use strict';\n\nconst uuidv4 = require('uuid').v4;\n\nconst TransactionQueries = {\n  /**\n   * Returns a query that sets the transaction isolation level.\n   *\n   * @param  {string} value   The isolation level.\n   * @param  {object} options An object with options.\n   * @returns {string}         The generated sql query.\n   * @private\n   */\n  setIsolationLevelQuery(value, options) {\n    if (options.parent) {\n      return;\n    }\n\n    return `SET TRANSACTION ISOLATION LEVEL ${value};`;\n  },\n\n  generateTransactionId() {\n    return uuidv4();\n  },\n\n  /**\n   * Returns a query that starts a transaction.\n   *\n   * @param  {Transaction} transaction\n   * @returns {string}         The generated sql query.\n   * @private\n   */\n  startTransactionQuery(transaction) {\n    if (transaction.parent) {\n      // force quoting of savepoint identifiers for postgres\n      return `SAVEPOINT ${this.quoteIdentifier(transaction.name, true)};`;\n    }\n\n    return 'START TRANSACTION;';\n  },\n\n  deferConstraintsQuery() {},\n\n  setConstraintQuery() {},\n  setDeferredQuery() {},\n  setImmediateQuery() {},\n\n  /**\n   * Returns a query that commits a transaction.\n   *\n   * @param  {Transaction} transaction An object with options.\n   * @returns {string}         The generated sql query.\n   * @private\n   */\n  commitTransactionQuery(transaction) {\n    if (transaction.parent) {\n      return;\n    }\n\n    return 'COMMIT;';\n  },\n\n  /**\n   * Returns a query that rollbacks a transaction.\n   *\n   * @param  {Transaction} transaction\n   * @returns {string}         The generated sql query.\n   * @private\n   */\n  rollbackTransactionQuery(transaction) {\n    if (transaction.parent) {\n      // force quoting of savepoint identifiers for postgres\n      return `ROLLBACK TO SAVEPOINT ${this.quoteIdentifier(transaction.name, true)};`;\n    }\n\n    return 'ROLLBACK;';\n  }\n};\n\nmodule.exports = TransactionQueries;\n"]},"metadata":{},"sourceType":"script"}