{"ast":null,"code":"\"use strict\";\n\nvar t = Object.defineProperty;\n\nvar n = (e, r) => t(e, \"name\", {\n  value: r,\n  configurable: !0\n});\n\nconst s = require(\"./../connection-error\");\n\nclass o extends s {\n  constructor(r) {\n    super(r);\n    this.name = \"SequelizeInvalidConnectionError\";\n  }\n\n}\n\nn(o, \"InvalidConnectionError\"), module.exports = o;","map":{"version":3,"sources":["../../../../lib/errors/connection/invalid-connection-error.js"],"names":[],"mappings":";;;;;;;;;AAEA,MAAM,CAAA,GAAkB,OAAA,CAAQ,uBAAR,CAAxB;;AAKA,MAAA,CAAA,SAAqC,CAArC,CAAqD;AACnD,EAAA,WAAA,CAAY,CAAZ,EAAoB;AAClB,UAAM,CAAN;AACA,SAAK,IAAL,GAAY,iCAAZ;AAAY;;AAHqC;;AAArD,CAAA,CAAA,CAAA,EAAA,wBAAA,CAAA,EAOA,MAAA,CAAO,OAAP,GAAiB,CAPjB","sourcesContent":["'use strict';\n\nconst ConnectionError = require('./../connection-error');\n\n/**\n * Thrown when a connection to a database has invalid values for any of the connection parameters\n */\nclass InvalidConnectionError extends ConnectionError {\n  constructor(parent) {\n    super(parent);\n    this.name = 'SequelizeInvalidConnectionError';\n  }\n}\n\nmodule.exports = InvalidConnectionError;\n"]},"metadata":{},"sourceType":"script"}