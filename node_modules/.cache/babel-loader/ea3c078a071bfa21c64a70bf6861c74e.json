{"ast":null,"code":"\"use strict\";\n\nvar o = Object.defineProperty;\n\nvar s = (e, r) => o(e, \"name\", {\n  value: r,\n  configurable: !0\n});\n\nconst u = require(\"./base-error\");\n\nclass t extends u {\n  constructor(r) {\n    super(r);\n    this.name = \"SequelizeEmptyResultError\";\n  }\n\n}\n\ns(t, \"EmptyResultError\"), module.exports = t;","map":{"version":3,"sources":["../../../lib/errors/empty-result-error.js"],"names":[],"mappings":";;;;;;;;;AAEA,MAAM,CAAA,GAAY,OAAA,CAAQ,cAAR,CAAlB;;AAKA,MAAA,CAAA,SAA+B,CAA/B,CAAyC;AACvC,EAAA,WAAA,CAAY,CAAZ,EAAqB;AACnB,UAAM,CAAN;AACA,SAAK,IAAL,GAAY,2BAAZ;AAAY;;AAHyB;;AAAzC,CAAA,CAAA,CAAA,EAAA,kBAAA,CAAA,EAOA,MAAA,CAAO,OAAP,GAAiB,CAPjB","sourcesContent":["'use strict';\n\nconst BaseError = require('./base-error');\n\n/**\n * Thrown when a record was not found, Usually used with rejectOnEmpty mode (see message for details)\n */\nclass EmptyResultError extends BaseError {\n  constructor(message) {\n    super(message);\n    this.name = 'SequelizeEmptyResultError';\n  }\n}\n\nmodule.exports = EmptyResultError;\n"]},"metadata":{},"sourceType":"script"}