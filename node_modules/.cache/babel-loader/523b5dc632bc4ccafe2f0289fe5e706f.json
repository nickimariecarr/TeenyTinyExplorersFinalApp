{"ast":null,"code":"\"use strict\";\n\nconst o = {\n  eq: Symbol.for(\"eq\"),\n  ne: Symbol.for(\"ne\"),\n  gte: Symbol.for(\"gte\"),\n  gt: Symbol.for(\"gt\"),\n  lte: Symbol.for(\"lte\"),\n  lt: Symbol.for(\"lt\"),\n  not: Symbol.for(\"not\"),\n  is: Symbol.for(\"is\"),\n  in: Symbol.for(\"in\"),\n  notIn: Symbol.for(\"notIn\"),\n  like: Symbol.for(\"like\"),\n  notLike: Symbol.for(\"notLike\"),\n  iLike: Symbol.for(\"iLike\"),\n  notILike: Symbol.for(\"notILike\"),\n  startsWith: Symbol.for(\"startsWith\"),\n  endsWith: Symbol.for(\"endsWith\"),\n  substring: Symbol.for(\"substring\"),\n  regexp: Symbol.for(\"regexp\"),\n  notRegexp: Symbol.for(\"notRegexp\"),\n  iRegexp: Symbol.for(\"iRegexp\"),\n  notIRegexp: Symbol.for(\"notIRegexp\"),\n  between: Symbol.for(\"between\"),\n  notBetween: Symbol.for(\"notBetween\"),\n  overlap: Symbol.for(\"overlap\"),\n  contains: Symbol.for(\"contains\"),\n  contained: Symbol.for(\"contained\"),\n  adjacent: Symbol.for(\"adjacent\"),\n  strictLeft: Symbol.for(\"strictLeft\"),\n  strictRight: Symbol.for(\"strictRight\"),\n  noExtendRight: Symbol.for(\"noExtendRight\"),\n  noExtendLeft: Symbol.for(\"noExtendLeft\"),\n  and: Symbol.for(\"and\"),\n  or: Symbol.for(\"or\"),\n  any: Symbol.for(\"any\"),\n  all: Symbol.for(\"all\"),\n  values: Symbol.for(\"values\"),\n  col: Symbol.for(\"col\"),\n  placeholder: Symbol.for(\"placeholder\"),\n  join: Symbol.for(\"join\"),\n  match: Symbol.for(\"match\")\n};\nmodule.exports = o;","map":{"version":3,"sources":["../../lib/operators.js"],"names":[],"mappings":"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","sourcesContent":["\n'use strict';\n/**\n * Operator symbols to be used when querying data\n *\n * @see {@link Model#where}\n *\n * @property eq\n * @property ne\n * @property gte\n * @property gt\n * @property lte\n * @property lt\n * @property not\n * @property is\n * @property in\n * @property notIn\n * @property like\n * @property notLike\n * @property iLike\n * @property notILike\n * @property startsWith\n * @property endsWith\n * @property substring\n * @property regexp\n * @property notRegexp\n * @property iRegexp\n * @property notIRegexp\n * @property between\n * @property notBetween\n * @property overlap\n * @property contains\n * @property contained\n * @property adjacent\n * @property strictLeft\n * @property strictRight\n * @property noExtendRight\n * @property noExtendLeft\n * @property and\n * @property or\n * @property any\n * @property all\n * @property values\n * @property col\n * @property placeholder\n * @property join\n */\nconst Op = {\n  eq: Symbol.for('eq'),\n  ne: Symbol.for('ne'),\n  gte: Symbol.for('gte'),\n  gt: Symbol.for('gt'),\n  lte: Symbol.for('lte'),\n  lt: Symbol.for('lt'),\n  not: Symbol.for('not'),\n  is: Symbol.for('is'),\n  in: Symbol.for('in'),\n  notIn: Symbol.for('notIn'),\n  like: Symbol.for('like'),\n  notLike: Symbol.for('notLike'),\n  iLike: Symbol.for('iLike'),\n  notILike: Symbol.for('notILike'),\n  startsWith: Symbol.for('startsWith'),\n  endsWith: Symbol.for('endsWith'),\n  substring: Symbol.for('substring'),\n  regexp: Symbol.for('regexp'),\n  notRegexp: Symbol.for('notRegexp'),\n  iRegexp: Symbol.for('iRegexp'),\n  notIRegexp: Symbol.for('notIRegexp'),\n  between: Symbol.for('between'),\n  notBetween: Symbol.for('notBetween'),\n  overlap: Symbol.for('overlap'),\n  contains: Symbol.for('contains'),\n  contained: Symbol.for('contained'),\n  adjacent: Symbol.for('adjacent'),\n  strictLeft: Symbol.for('strictLeft'),\n  strictRight: Symbol.for('strictRight'),\n  noExtendRight: Symbol.for('noExtendRight'),\n  noExtendLeft: Symbol.for('noExtendLeft'),\n  and: Symbol.for('and'),\n  or: Symbol.for('or'),\n  any: Symbol.for('any'),\n  all: Symbol.for('all'),\n  values: Symbol.for('values'),\n  col: Symbol.for('col'),\n  placeholder: Symbol.for('placeholder'),\n  join: Symbol.for('join'),\n  match: Symbol.for('match')\n};\n\nmodule.exports = Op;\n"]},"metadata":{},"sourceType":"script"}