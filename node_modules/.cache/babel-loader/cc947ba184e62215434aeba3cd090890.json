{"ast":null,"code":"\"use strict\";\n\nvar n = Object.defineProperty;\n\nvar o = (e, r) => n(e, \"name\", {\n  value: r,\n  configurable: !0\n});\n\nconst s = require(\"./../connection-error\");\n\nclass t extends s {\n  constructor(r) {\n    super(r);\n    this.name = \"SequelizeHostNotFoundError\";\n  }\n\n}\n\no(t, \"HostNotFoundError\"), module.exports = t;","map":{"version":3,"sources":["../../../../lib/errors/connection/host-not-found-error.js"],"names":[],"mappings":";;;;;;;;;AAEA,MAAM,CAAA,GAAkB,OAAA,CAAQ,uBAAR,CAAxB;;AAKA,MAAA,CAAA,SAAgC,CAAhC,CAAgD;AAC9C,EAAA,WAAA,CAAY,CAAZ,EAAoB;AAClB,UAAM,CAAN;AACA,SAAK,IAAL,GAAY,4BAAZ;AAAY;;AAHgC;;AAAhD,CAAA,CAAA,CAAA,EAAA,mBAAA,CAAA,EAOA,MAAA,CAAO,OAAP,GAAiB,CAPjB","sourcesContent":["'use strict';\n\nconst ConnectionError = require('./../connection-error');\n\n/**\n * Thrown when a connection to a database has a hostname that was not found\n */\nclass HostNotFoundError extends ConnectionError {\n  constructor(parent) {\n    super(parent);\n    this.name = 'SequelizeHostNotFoundError';\n  }\n}\n\nmodule.exports = HostNotFoundError;\n"]},"metadata":{},"sourceType":"script"}